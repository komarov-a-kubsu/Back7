1. XSS
Для защиты от данного метода атак используется функция 'htmlspecialchars', которая преобразует специальные символы в HTML-сущности и предотвращает выполнение злонамеренного JavaScript кода.
2. SQL-injection
Отправка запроса в БД осуществляются с использованием подготовленных выражений (PDO::prepare). Это предотвращает вставку злонамеренного SQL кода в запросы.
3. CSRF
Для защиты от данного метода атаки используется механизм токенов, которые генерируются и проверяются:
$_SESSION['csrf_token'] = bin2hex(random_bytes(32))
Скрытое поле под хранение значения:
<input type="hidden" name="csrf_token" value="<?= $_SESSION['csrf_token'] ?>">
На примере submit.php проверка токена:
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (!hash_equals($_SESSION['csrf_token'], $_POST['csrf_token'])) {
        die('Invalid CSRF token');
    }
}
4.  Include/Upload
В коде не предусмотрена отправка каких либо файлов, а так же он не содержит функций include/require или загрузки файлов, поэтому не возникает уязвимостей, связанных с этими функциями.